{"version":3,"sources":["Bryce-Notes-Challenge1.md","Bryce-Notes-Challenge2.md","Bryce-Notes-Challenge3.md","Bryce-Notes-Challenge4.md","table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","columns","Header","accessor","Cell","props","console","log","row","expiration","Date","toLocaleString","CertTable","_ref","Object","objectDestructuringEmpty","react_default","a","createElement","es","data","sorted","id","desc","TabContainer","Typography","component","style","padding","children","StyledTab","withStyles","theme","root","textTransform","&:focus","opacity","Tab","StyledTabs","indicator","display","backgroundColor","justifyContent","& > div","width","Tabs","assign","TabIndicatorProps","TabsWrappedLabel","_React$useState","React","useState","_React$useState2","slicedToArray","value","setValue","_React$useState3","_React$useState4","md1","setMd1","_React$useState5","_React$useState6","md2","setMd2","_React$useState7","_React$useState8","md3","setMd3","_React$useState9","_React$useState10","md4","setMd4","useEffect","fetch","challenge1","then","res","text","md","challenge2","challenge3","challenge4","AppBar","position","color","onChange","event","newValue","textColor","variant","label","esm","table","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.093f2e1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bryce-Notes-Challenge1.12931413.md\";","module.exports = __webpack_public_path__ + \"static/media/Bryce-Notes-Challenge2.520eb753.md\";","module.exports = __webpack_public_path__ + \"static/media/Bryce-Notes-Challenge3.3b79b394.md\";","module.exports = __webpack_public_path__ + \"static/media/Bryce-Notes-Challenge4.390e27fc.md\";","import React from \"react\";\nimport ReactTable from \"react-table\";\nimport data from \"./final.json\";\nimport rt from \"react-table/react-table.css\";\nconst columns = [\n  {\n    Header: \"Expiration\",\n    accessor: \"expiration\",\n    Cell: props => {\n      console.log(props.row.expiration);\n      let d = new Date(props.row.expiration * 1000);\n      return d.toLocaleString();\n    }\n  },\n  {\n    Header: \"Host\",\n    accessor: \"host\"\n  },\n  {\n    Header: \"Version\",\n    accessor: \"version\"\n  },\n  {\n    Header: \"Signature Algorithm\",\n    accessor: \"sig_algorithm\"\n  }\n];\n\nfunction CertTable({}) {\n  return (\n    <div>\n      <ReactTable\n        data={data}\n        columns={columns}\n        sorted={[\n          {\n            id: \"expiration\",\n            desc: false\n          }\n        ]}\n      />\n    </div>\n  );\n}\nexport default CertTable;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport challenge1 from \"./Bryce-Notes-Challenge1.md\";\nimport challenge2 from \"./Bryce-Notes-Challenge2.md\";\nimport challenge3 from \"./Bryce-Notes-Challenge3.md\";\nimport challenge4 from \"./Bryce-Notes-Challenge4.md\";\nimport Markdown from \"markdown-to-jsx\";\nimport CertTable from \"./table\";\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst StyledTab = withStyles(theme => ({\n  root: {\n    textTransform: \"none\",\n    \"&:focus\": {\n      opacity: 1\n    }\n  }\n}))(props => <Tab {...props} />);\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    backgroundColor: \"#f50057\",\n    justifyContent: \"center\",\n    \"& > div\": {\n      width: \"100%\"\n    }\n  }\n  // indicatorColor: \"#f50057\"\n})(props => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nfunction TabsWrappedLabel({}) {\n  const [value, setValue] = React.useState(0);\n  const [md1, setMd1] = React.useState(\"\");\n  const [md2, setMd2] = React.useState(\"\");\n  const [md3, setMd3] = React.useState(\"\");\n  const [md4, setMd4] = React.useState(\"\");\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  useEffect(() => {\n    fetch(challenge1)\n      .then(res => res.text())\n      .then(md => {\n        setMd1(md);\n      });\n    fetch(challenge2)\n      .then(res => res.text())\n      .then(md => {\n        setMd2(md);\n      });\n    fetch(challenge3)\n      .then(res => res.text())\n      .then(md => {\n        setMd3(md);\n      });\n    fetch(challenge4)\n      .then(res => res.text())\n      .then(md => {\n        setMd4(md);\n      });\n  }, []);\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"default\">\n        <StyledTabs\n          value={value}\n          onChange={handleChange}\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <StyledTab label=\"Challenge 1\" />\n          <StyledTab label=\"Challenge 2\" />\n          <StyledTab label=\"Challenge 3\" />\n          <StyledTab label=\"Challenge 4\" />\n        </StyledTabs>\n      </AppBar>\n      {value === 0 && (\n        <TabContainer>\n          <Markdown children={md1} />\n        </TabContainer>\n      )}\n      {value === 1 && (\n        <TabContainer>\n          <Markdown children={md2} />\n        </TabContainer>\n      )}\n      {value === 2 && (\n        <TabContainer>\n          <Markdown children={md3} />\n        </TabContainer>\n      )}\n      {value === 3 && (\n        <TabContainer>\n          <Markdown children={md4} />\n          <CertTable />\n        </TabContainer>\n      )}\n    </div>\n  );\n}\n\nexport default TabsWrappedLabel;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}